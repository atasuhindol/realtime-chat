openapi: 3.0.0
info:
  title: Realtime Chat API
  version: 1.0.0
  description: Realtime chat system API documentation
servers:
  - url: http://localhost:3000
tags:
  - name: Auth
    description: Authentication endpoints
  - name: Conversation
    description: Conversation endpoints
  - name: Message
    description: Message endpoints
paths:
  /api/auth/register:
    post:
      tags: [Auth]
      summary: Register a new user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                email:
                  type: string
                password:
                  type: string
      responses:
        '201':
          description: User registered successfully
        '400':
          description: Validation error
  /api/auth/login:
    post:
      tags: [Auth]
      summary: Login with email and password
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                password:
                  type: string
      responses:
        '200':
          description: Login successful
        '400':
          description: Invalid credentials
  /api/auth/refresh:
    post:
      tags: [Auth]
      summary: Refresh JWT token
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                refreshToken:
                  type: string
      responses:
        '200':
          description: Token refreshed
        '400':
          description: Refresh token required
        '401':
          description: Invalid refresh token
  /api/auth/logout:
    post:
      tags: [Auth]
      summary: Logout user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                refreshToken:
                  type: string
      responses:
        '200':
          description: Logout successful
        '400':
          description: Refresh token required
  /api/auth/me:
    get:
      tags: [Auth]
      summary: Get current user profile
      security:
        - bearerAuth: []
      responses:
        '200':
          description: User profile
        '401':
          description: Unauthorized
  /api/conversations:
    get:
      tags: [Conversation]
      summary: List all conversations for the authenticated user
      security:
        - bearerAuth: []
      responses:
        '200':
          description: List of conversations
        '401':
          description: Unauthorized
  /api/messages/send:
    post:
      tags: [Message]
      summary: Send a message in a conversation
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                conversationId:
                  type: string
                content:
                  type: string
      responses:
        '201':
          description: Message sent
        '400':
          description: Validation error
        '401':
          description: Unauthorized
  /api/messages/{conversationId}:
    get:
      tags: [Message]
      summary: Get all messages in a conversation
      security:
        - bearerAuth: []
      parameters:
        - name: conversationId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: List of messages
        '401':
          description: Unauthorized
  /api/messages/read/{messageId}:
    post:
      tags: [Message]
      summary: Mark a message as read
      security:
        - bearerAuth: []
      parameters:
        - name: messageId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Message marked as read
        '401':
          description: Unauthorized
  /api/users/online:
    get:
      tags: [User]
      summary: Get list of online users (from Redis)
      responses:
        '200':
          description: List of online user IDs
  /api/users/list:
    get:
      tags: [User]
      summary: Get list of all users (requires authentication)
      security:
        - bearerAuth: []
      responses:
        '200':
          description: List of users
        '401':
          description: Unauthorized
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT